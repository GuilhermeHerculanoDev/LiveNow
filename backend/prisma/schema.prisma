generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @unique @default(autoincrement())
  email         String         @unique @db.VarChar(500)
  name          String         @unique @db.VarChar(100)
  password      String        @db.VarChar(100)
  is_admin      Boolean        @default(false)
  dietPlans     DietPlan[]
  trainingPlans TrainingPlan[]
}

model DietPlan {
  id     Int     @id @default(autoincrement())
  userId Int
  dayId  Int
  dietId Int
  user   User    @relation(fields: [userId], references: [id])
  day    Weekday @relation(fields: [dayId], references: [id])
  diet   Diet    @relation(fields: [dietId], references: [id])
}

model Weekday {
  id            Int            @id @default(autoincrement())
  dayName       String         @unique
  dietPlans     DietPlan[]     
  trainingPlans TrainingPlan[] 
}

model Diet {
  id        Int        @id @default(autoincrement())
  name      String
  dietPlans DietPlan[]
  meals     Meal[]
}

model Meal {
  id        Int     @id @default(autoincrement())
  dietId    Int
  diet      Diet    @relation(fields: [dietId], references: [id])
  food_name String
  calories  Int
}

model Exercise {
  id         Int     @id @default(autoincrement())
  name       String
  sets       Int     
  repetitions Int    
  workoutId  Int
  workout    Workout @relation(fields: [workoutId], references: [id])
}

model Workout {
  id            Int            @id @default(autoincrement())
  name          String
  exercises     Exercise[]
  trainingPlans TrainingPlan[]
}

model TrainingPlan {
  id        Int     @id @default(autoincrement())
  userId    Int
  dayId     Int
  workoutId Int
  user      User    @relation(fields: [userId], references: [id])
  day       Weekday @relation(fields: [dayId], references: [id])
  workout   Workout @relation(fields: [workoutId], references: [id])
}
